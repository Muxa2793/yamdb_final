name: yamdb-drf workflow

on: [push]

env:
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  DB_ENGINE: ${{ secrets.DB_ENGINE }}
  DB_NAME: ${{ secrets.DB_NAME }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}

jobs: 
  # JOB 1
  tests:
    name: pep8 check and tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # STEP 1
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      # STEP 2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          cd api_yamdb
          pip install -r requirements.txt
      # STEP 3
      - name: Test with flake8 and pytesting
        env: 
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          python -m flake8 
          pytest
  # JOB 2
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      # STEP 1
      - name: Check out the repo
        uses: actions/checkout@v3
      # STEP 2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      # STEP 3
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }} 
      # STEP 4
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          push: true
          tags: mspiridonov/yamdb_web:latest
  # JOB 3
  deploy:
    name: Deploy on YANDEX CLOUD
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    # STEP 1
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.YANDEX_CLOUD_HOST }}
        username: ${{ secrets.YANDEX_CLOUD_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          sudo docker-compose stop
          sudo docker-compose rm web
          sudo docker-compose up -d
          sudo docker-compose exec web python manage.py migrate
          sudo docker-compose exec web python manage.py collectstatic --no-input
  # JOB 4
  send_message:
    name: Send message from telegram bot
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    # STEP 1
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!